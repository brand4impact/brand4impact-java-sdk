/*
 * Total API Reference
 * Este contrato se usara para generar los clientes con todos los servicios necesarios.  `!Uso exclusivo interno!`               --- 
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@brand4impact.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.brand4impact.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.brand4impact.client.model.PlatformInvoiceEntryBase;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * PlatformInvoiceEntry
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-03-31T15:35:43.909+02:00[Europe/Paris]")
public class PlatformInvoiceEntry {
  public static final String SERIALIZED_NAME_CONCEPT = "concept";
  @SerializedName(SERIALIZED_NAME_CONCEPT)
  private String concept;

  public static final String SERIALIZED_NAME_UNITS = "units";
  @SerializedName(SERIALIZED_NAME_UNITS)
  private Integer units;

  public static final String SERIALIZED_NAME_BASE = "base";
  @SerializedName(SERIALIZED_NAME_BASE)
  private PlatformInvoiceEntryBase base;

  public static final String SERIALIZED_NAME_TAXES = "taxes";
  @SerializedName(SERIALIZED_NAME_TAXES)
  private PlatformInvoiceEntryBase taxes;


  public PlatformInvoiceEntry concept(String concept) {
    
    this.concept = concept;
    return this;
  }

   /**
   * Get concept
   * @return concept
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getConcept() {
    return concept;
  }


  public void setConcept(String concept) {
    this.concept = concept;
  }


  public PlatformInvoiceEntry units(Integer units) {
    
    this.units = units;
    return this;
  }

   /**
   * Get units
   * @return units
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getUnits() {
    return units;
  }


  public void setUnits(Integer units) {
    this.units = units;
  }


  public PlatformInvoiceEntry base(PlatformInvoiceEntryBase base) {
    
    this.base = base;
    return this;
  }

   /**
   * Get base
   * @return base
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PlatformInvoiceEntryBase getBase() {
    return base;
  }


  public void setBase(PlatformInvoiceEntryBase base) {
    this.base = base;
  }


  public PlatformInvoiceEntry taxes(PlatformInvoiceEntryBase taxes) {
    
    this.taxes = taxes;
    return this;
  }

   /**
   * Get taxes
   * @return taxes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PlatformInvoiceEntryBase getTaxes() {
    return taxes;
  }


  public void setTaxes(PlatformInvoiceEntryBase taxes) {
    this.taxes = taxes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlatformInvoiceEntry platformInvoiceEntry = (PlatformInvoiceEntry) o;
    return Objects.equals(this.concept, platformInvoiceEntry.concept) &&
        Objects.equals(this.units, platformInvoiceEntry.units) &&
        Objects.equals(this.base, platformInvoiceEntry.base) &&
        Objects.equals(this.taxes, platformInvoiceEntry.taxes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(concept, units, base, taxes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlatformInvoiceEntry {\n");
    sb.append("    concept: ").append(toIndentedString(concept)).append("\n");
    sb.append("    units: ").append(toIndentedString(units)).append("\n");
    sb.append("    base: ").append(toIndentedString(base)).append("\n");
    sb.append("    taxes: ").append(toIndentedString(taxes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

